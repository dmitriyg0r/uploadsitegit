version: '3.8'

services:
  # Backend сервер
  backend:
    build: ./server
    container_name: uploadsite-backend
    ports:
      - "5001:5000"
    volumes:
      - ./uploads:/app/uploads
    environment:
      - NODE_ENV=production
      - PORT=5000
    restart: unless-stopped
    networks:
      - uploadsite-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.space-point.ru`)"

  # Frontend с nginx
  frontend:
    build: .
    container_name: uploadsite-frontend
    ports:
      - "8081:80"
      - "8443:443"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - uploadsite-network
    environment:
      - VIRTUAL_HOST=space-point.ru,www.space-point.ru

  # Portainer для управления Docker
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    ports:
      - "9000:9000"
      - "9443:9443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    restart: unless-stopped
    networks:
      - uploadsite-network

  # Watchtower для автообновления контейнеров
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=3600  # Проверка каждый час
      - WATCHTOWER_INCLUDE_STOPPED=true
    restart: unless-stopped
    networks:
      - uploadsite-network

  # cAdvisor для мониторинга ресурсов
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    restart: unless-stopped
    networks:
      - uploadsite-network

volumes:
  uploads:
  portainer_data:

networks:
  uploadsite-network:
    driver: bridge 