import React, { useState } from 'react';
import axios from 'axios';
import { Link, useNavigate } from 'react-router-dom';

function UploadPage() {
  const [formData, setFormData] = useState({
    title: '',
    authors: [''],
    group: '18–ü—Ä–î4310',
    subject: ''
  });
  const [files, setFiles] = useState({
    exeFile: null,
    docxFile: null
  });
  const [uploading, setUploading] = useState(false);
  const [uploadProgress, setUploadProgress] = useState('');
  const [message, setMessage] = useState({ text: '', type: '' });
  const [redirectTimer, setRedirectTimer] = useState(0);
  
  const navigate = useNavigate();
  const API_URL = import.meta.env.VITE_API_URL || '';

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
  };

  const handleAuthorChange = (index, value) => {
    setFormData(prev => ({
      ...prev,
      authors: prev.authors.map((author, i) => i === index ? value : author)
    }));
  };

  const addAuthor = () => {
    if (formData.authors.length < 4) {
      setFormData(prev => ({
        ...prev,
        authors: [...prev.authors, '']
      }));
    }
  };

  const removeAuthor = (index) => {
    if (formData.authors.length > 1) {
      setFormData(prev => ({
        ...prev,
        authors: prev.authors.filter((_, i) => i !== index)
      }));
    }
  };

  const handleFileChange = (e) => {
    const { name, files: selectedFiles } = e.target;
    setFiles(prev => ({
      ...prev,
      [name]: selectedFiles[0]
    }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    
    if (!formData.title.trim()) {
      setMessage({ text: '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã', type: 'error' });
      return;
    }
    
    const filledAuthors = formData.authors.filter(author => author.trim());
    if (filledAuthors.length === 0) {
      setMessage({ text: '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ–≥–æ –∞–≤—Ç–æ—Ä–∞ —Ä–∞–±–æ—Ç—ã', type: 'error' });
      return;
    }
    
    if (!files.exeFile || !files.docxFile) {
      setMessage({ text: '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏ exe —Ñ–∞–π–ª –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é', type: 'error' });
      return;
    }

    setUploading(true);
    setMessage({ text: '', type: '' });
    setUploadProgress('–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –∑–∞–≥—Ä—É–∑–∫–µ...');

    const uploadData = new FormData();
    
    uploadData.append('title', formData.title.trim());
    
    const cleanAuthors = filledAuthors.map(author => author.trim());
    uploadData.append('fullName', cleanAuthors[0]);
    
    if (cleanAuthors.length > 1) {
      uploadData.append('secondAuthor', cleanAuthors.slice(1).join(', '));
    }
    
    cleanAuthors.forEach((author, index) => {
      uploadData.append(`author_${index}`, author);
    });
    uploadData.append('authorsCount', cleanAuthors.length.toString());
    
    uploadData.append('group', formData.group);
    uploadData.append('subject', formData.subject);

    try {
      setUploadProgress('–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤...');
      
      uploadData.append('exeFile', files.exeFile);
      uploadData.append('docxFile', files.docxFile);

      setUploadProgress('–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä...');

      const response = await axios.post(`${API_URL}/api/upload`, uploadData, {
        headers: {
          'Content-Type': 'multipart/form-data',
        },
        onUploadProgress: (progressEvent) => {
          if (progressEvent.lengthComputable) {
            const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);
            setUploadProgress(`–ó–∞–≥—Ä—É–∑–∫–∞: ${percentCompleted}%`);
          }
        }
      });

      setUploadProgress('–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
      setMessage({ text: '‚úÖ –§–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!', type: 'success' });
      
      setFormData({
        title: '',
        authors: [''],
        group: '18–ü—Ä–î4310',
        subject: ''
      });
      setFiles({
        exeFile: null,
        docxFile: null
      });
      
      document.getElementById('exeFile').value = '';
      document.getElementById('docxFile').value = '';
      
      setTimeout(() => {
        navigate('/');
      }, 2000);
      
    } catch (error) {
      const errorMessage = error.response?.data?.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–æ–≤';
      setMessage({ text: `‚ùå ${errorMessage}`, type: 'error' });
      setUploadProgress('');
      setUploading(false);
    }
  };

  return (
    <div className="upload-page">
      <header className="page-header">
        <h1>‚Üó –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–∞–±–æ—Ç—ã</h1>
        <p>–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Å–≤–æ—é –ø—Ä–æ–≥—Ä–∞–º–º—É –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é</p>
        <Link to="/" className="back-link">
          ‚Üê –ù–∞–∑–∞–¥ –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É —Ä–∞–±–æ—Ç
        </Link>
      </header>

      <main className="main-content">
        <div className="upload-section">
          <div className="upload-form-container">
            <h2>–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª—ã</h2>
            
            <form onSubmit={handleSubmit} className="upload-form">
              <div className="form-group">
                <label htmlFor="title">–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã *</label>
                <input
                  type="text"
                  id="title"
                  name="title"
                  value={formData.title}
                  onChange={handleInputChange}
                  placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö"
                  className="title-input"
                  required
                />
                <div className="input-hint">
                  –£–∫–∞–∂–∏—Ç–µ –∫—Ä–∞—Ç–∫–æ–µ –∏ –ø–æ–Ω—è—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–π —Ä–∞–±–æ—Ç—ã
                </div>
              </div>

              <div className="form-group">
                <label>–ê–≤—Ç–æ—Ä—ã —Ä–∞–±–æ—Ç—ã *</label>
                <div className="authors-container">
                  {formData.authors.map((author, index) => (
                    <div key={index} className="author-input-row">
                      <input
                        type="text"
                        value={author}
                        onChange={(e) => handleAuthorChange(index, e.target.value)}
                        placeholder={`–§–ò–û ${index === 0 ? '–æ—Å–Ω–æ–≤–Ω–æ–≥–æ' : index + 1 + '-–≥–æ'} –∞–≤—Ç–æ—Ä–∞`}
                        className="author-input"
                      />
                      {formData.authors.length > 1 && (
                        <button
                          type="button"
                          onClick={() => removeAuthor(index)}
                          className="remove-author-btn"
                          title="–£–¥–∞–ª–∏—Ç—å –∞–≤—Ç–æ—Ä–∞"
                        >
                          ‚úï
                        </button>
                      )}
                    </div>
                  ))}
                  {formData.authors.length < 4 && (
                    <button
                      type="button"
                      onClick={addAuthor}
                      className="add-author-btn"
                    >
                      + –î–æ–±–∞–≤–∏—Ç—å –∞–≤—Ç–æ—Ä–∞
                    </button>
                  )}
                  <div className="authors-hint">
                    –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ 4 –∞–≤—Ç–æ—Ä–æ–≤. –ü–µ—Ä–≤—ã–π –∞–≤—Ç–æ—Ä —Å—á–∏—Ç–∞–µ—Ç—Å—è –æ—Å–Ω–æ–≤–Ω—ã–º.
                  </div>
                </div>
              </div>

              <div className="form-group">
                <label htmlFor="group">–ì—Ä—É–ø–ø–∞</label>
                <input
                  type="text"
                  id="group"
                  name="group"
                  value={formData.group}
                  readOnly
                  className="group-input-readonly"
                  title="–ü–æ–ª–µ –≥—Ä—É–ø–ø—ã –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ"
                />
              </div>

              <div className="form-group">
                <label htmlFor="subject">–ü—Ä–µ–¥–º–µ—Ç/–î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞</label>
                <input
                  type="text"
                  id="subject"
                  name="subject"
                  value={formData.subject}
                  onChange={handleInputChange}
                  placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞"
                />
              </div>

              <div className="file-uploads">
                <div className="form-group">
                  <label htmlFor="exeFile">–ò—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª (.exe) *</label>
                  <div className="file-input-container">
                    <input
                      type="file"
                      id="exeFile"
                      name="exeFile"
                      onChange={handleFileChange}
                      accept=".exe"
                      required
                    />
                    <div className="file-hint">
                      <p>üìÅ –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª –≤–∞—à–µ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã</p>
                      <p>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 100MB</p>
                    </div>
                  </div>
                </div>

                <div className="form-group">
                  <label htmlFor="docxFile">–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è (.docx) *</label>
                  <div className="file-input-container">
                    <input
                      type="file"
                      id="docxFile"
                      name="docxFile"
                      onChange={handleFileChange}
                      accept=".docx"
                      required
                    />
                    <div className="file-hint">
                      <p>üìÑ –ó–∞–≥—Ä—É–∑–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –∫ –ø—Ä–æ–≥—Ä–∞–º–º–µ</p>
                      <p>–§–æ—Ä–º–∞—Ç: Microsoft Word (.docx)</p>
                    </div>
                  </div>
                </div>
              </div>

              <button 
                type="submit" 
                className="submit-button"
                disabled={uploading}
              >
                {uploading ? (
                  <div className="loading-content">
                    <div className="loading-spinner"></div>
                    <span>{uploadProgress}</span>
                  </div>
                ) : (
                  '‚Üó –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª—ã'
                )}
              </button>
              
              {uploading && (
                <div className="upload-progress">
                  <div className="progress-bar">
                    <div className="progress-fill"></div>
                  </div>
                </div>
              )}
            </form>

            {message.text && (
              <div className={`message ${message.type === 'success' ? 'success' : 'error'}`}>
                {message.text}
                {message.type === 'success' && (
                  <p className="redirect-info">–ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É —Ä–∞–±–æ—Ç...</p>
                )}
              </div>
            )}
          </div>

          <div className="upload-info">
            <h3>‚Ñπ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
            <div className="info-content">
              <div className="info-item">
                <h4>–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é:</h4>
                <ul>
                  <li>–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã: –∫—Ä–∞—Ç–∫–æ–µ –∏ –ø–æ–Ω—è—Ç–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞</li>
                  <li>–ú–∏–Ω–∏–º—É–º –æ–¥–∏–Ω –∞–≤—Ç–æ—Ä (–º–∞–∫—Å–∏–º—É–º 4 –∞–≤—Ç–æ—Ä–∞)</li>
                  <li>–ì—Ä—É–ø–ø–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –∫–∞–∫ 18–ü—Ä–î4310</li>
                  <li>–ü—Ä–µ–¥–º–µ—Ç/–¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)</li>
                </ul>
              </div>

              <div className="info-item">
                <h4>–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Ñ–∞–π–ª–∞–º:</h4>
                <ul>
                  <li>–ü—Ä–æ–≥—Ä–∞–º–º–∞: —Ñ–∞–π–ª —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .exe</li>
                  <li>–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: —Ñ–∞–π–ª —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .docx</li>
                  <li>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞: 100MB</li>
                </ul>
              </div>
              
              <div className="info-item">
                <h4>–ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏:</h4>
                <ul>
                  <li>–§–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ</li>
                  <li>–í–∞—à–∞ —Ä–∞–±–æ—Ç–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –≤ –æ–±—â–µ–º —Å–ø–∏—Å–∫–µ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º</li>
                  <li>–í—Å–µ –æ–¥–Ω–æ–≥—Ä—É–ø–ø–Ω–∏–∫–∏ –∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ —Å–º–æ–≥—É—Ç —É–≤–∏–¥–µ—Ç—å –≤–∞—à—É —Ä–∞–±–æ—Ç—É</li>
                  <li>–í –∫–∞—Ä—Ç–æ—á–∫–µ —Ä–∞–±–æ—Ç—ã –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω—ã –≤—Å–µ –∞–≤—Ç–æ—Ä—ã</li>
                </ul>
              </div>

              <div className="info-item">
                <h4>üí° –°–æ–≤–º–µ—Å—Ç–Ω–∞—è —Ä–∞–±–æ—Ç–∞</h4>
                <ul>
                  <li>–ï—Å–ª–∏ —Ä–∞–±–æ—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏, –¥–æ–±–∞–≤—å—Ç–µ –≤—Å–µ—Ö –∞–≤—Ç–æ—Ä–æ–≤</li>
                  <li>–û—Å–Ω–æ–≤–Ω–æ–π –∞–≤—Ç–æ—Ä —É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø–µ—Ä–≤—ã–º (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)</li>
                  <li>–ü–∞–ø–∫–∞ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∞–≤—Ç–æ—Ä–∞</li>
                  <li>–í –∫–∞—Ä—Ç–æ—á–∫–µ —Ä–∞–±–æ—Ç—ã –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω—ã –≤—Å–µ –∞–≤—Ç–æ—Ä—ã</li>
                  <li>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–≤—Ç–æ—Ä–æ–≤: 4</li>
                </ul>
              </div>

              <div className="info-item">
                <h4>üöÄ –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏</h4>
                <ul>
                  <li>–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ñ–∞–π–ª–æ–≤ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö</li>
                  <li>–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ —Å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å–∞</li>
                  <li>–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ</li>
                  <li>–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ø–∏—Å–∫—É —Ä–∞–±–æ—Ç</li>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </main>
    </div>
  );
}

export default UploadPage; 