import React, { useState } from 'react';
import axios from 'axios';
import { Link, useNavigate } from 'react-router-dom';

function UploadPage() {
  const [formData, setFormData] = useState({
    fullName: '',
    group: '',
    subject: ''
  });
  const [files, setFiles] = useState({
    exeFile: null,
    docxFile: null
  });
  const [uploading, setUploading] = useState(false);
  const [message, setMessage] = useState('');
  
  const navigate = useNavigate();
  const API_URL = import.meta.env.VITE_API_URL || '';

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
  };

  const handleFileChange = (e) => {
    const { name, files: selectedFiles } = e.target;
    setFiles(prev => ({
      ...prev,
      [name]: selectedFiles[0]
    }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    
    if (!formData.fullName.trim()) {
      setMessage('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –§–ò–û');
      return;
    }
    
    if (!files.exeFile || !files.docxFile) {
      setMessage('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–±–∞ —Ñ–∞–π–ª–∞ (exe –∏ docx)');
      return;
    }

    setUploading(true);
    setMessage('');

    try {
      const uploadData = new FormData();
      uploadData.append('fullName', formData.fullName);
      uploadData.append('group', formData.group);
      uploadData.append('subject', formData.subject);
      uploadData.append('exeFile', files.exeFile);
      uploadData.append('docxFile', files.docxFile);

      const response = await axios.post(`${API_URL}/api/upload`, uploadData, {
        headers: {
          'Content-Type': 'multipart/form-data',
        },
      });

      setMessage('‚úÖ –§–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!');
      
      // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
      setFormData({
        fullName: '',
        group: '',
        subject: ''
      });
      setFiles({
        exeFile: null,
        docxFile: null
      });
      
      // –û—á–∏—â–∞–µ–º input —Ñ–∞–π–ª–æ–≤
      document.getElementById('exeFile').value = '';
      document.getElementById('docxFile').value = '';
      
      // –ß–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
      setTimeout(() => {
        navigate('/');
      }, 2000);
      
    } catch (error) {
      const errorMessage = error.response?.data?.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–æ–≤';
      setMessage(`‚ùå ${errorMessage}`);
    } finally {
      setUploading(false);
    }
  };

  return (
    <div className="upload-page">
      <header className="page-header">
        <h1>üì§ –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–∞–±–æ—Ç—ã</h1>
        <p>–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Å–≤–æ—é –ø—Ä–æ–≥—Ä–∞–º–º—É –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é</p>
        <Link to="/" className="back-link">
          ‚Üê –ù–∞–∑–∞–¥ –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É —Ä–∞–±–æ—Ç
        </Link>
      </header>

      <main className="main-content">
        <div className="upload-section">
          <div className="upload-form-container">
            <h2>–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª—ã</h2>
            
            <form onSubmit={handleSubmit} className="upload-form">
              <div className="form-group">
                <label htmlFor="fullName">–§–ò–û *</label>
                <input
                  type="text"
                  id="fullName"
                  name="fullName"
                  value={formData.fullName}
                  onChange={handleInputChange}
                  placeholder="–§–∞–º–∏–ª–∏—è –ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ"
                  required
                />
              </div>

              <div className="form-group">
                <label htmlFor="group">–ì—Ä—É–ø–ø–∞</label>
                <input
                  type="text"
                  id="group"
                  name="group"
                  value={formData.group}
                  onChange={handleInputChange}
                  placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 18–ü—Ä–î4310"
                />
              </div>

              <div className="form-group">
                <label htmlFor="subject">–ü—Ä–µ–¥–º–µ—Ç/–ø—Ä–æ–µ–∫—Ç</label>
                <input
                  type="text"
                  id="subject"
                  name="subject"
                  value={formData.subject}
                  onChange={handleInputChange}
                  placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –¢–µ—Ä.–í–µ—Ä"
                />
              </div>

              <div className="file-uploads">
                <div className="form-group">
                  <label htmlFor="exeFile">–ò—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª (.exe) *</label>
                  <div className="file-input-container">
                    <input
                      type="file"
                      id="exeFile"
                      name="exeFile"
                      onChange={handleFileChange}
                      accept=".exe"
                      required
                    />
                    <div className="file-hint">
                      <p>üìÅ –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª –≤–∞—à–µ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã</p>
                      <p>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 100MB</p>
                    </div>
                  </div>
                </div>

                <div className="form-group">
                  <label htmlFor="docxFile">–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è (.docx) *</label>
                  <div className="file-input-container">
                    <input
                      type="file"
                      id="docxFile"
                      name="docxFile"
                      onChange={handleFileChange}
                      accept=".docx"
                      required
                    />
                    <div className="file-hint">
                      <p>üìÑ –ó–∞–≥—Ä—É–∑–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –∫ –ø—Ä–æ–≥—Ä–∞–º–º–µ</p>
                      <p>–§–æ—Ä–º–∞—Ç: Microsoft Word (.docx)</p>
                    </div>
                  </div>
                </div>
              </div>

              <button 
                type="submit" 
                className="submit-button"
                disabled={uploading}
              >
                {uploading ? '‚è≥ –ó–∞–≥—Ä—É–∂–∞–µ–º...' : 'üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª—ã'}
              </button>
            </form>

            {message && (
              <div className={`message ${message.includes('‚úÖ') ? 'success' : 'error'}`}>
                {message}
                {message.includes('‚úÖ') && (
                  <p className="redirect-info">–ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É —Ä–∞–±–æ—Ç...</p>
                )}
              </div>
            )}
          </div>

          <div className="upload-info">
            <h3>‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
            <div className="info-content">
              <div className="info-item">
                <h4>–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Ñ–∞–π–ª–∞–º:</h4>
                <ul>
                  <li>–ü—Ä–æ–≥—Ä–∞–º–º–∞: —Ñ–∞–π–ª —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .exe</li>
                  <li>–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: —Ñ–∞–π–ª —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .docx</li>
                  <li>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞: 100MB</li>
                </ul>
              </div>
              
              <div className="info-item">
                <h4>–ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏:</h4>
                <ul>
                  <li>–§–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ</li>
                  <li>–í–∞—à–∞ —Ä–∞–±–æ—Ç–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –≤ –æ–±—â–µ–º —Å–ø–∏—Å–∫–µ</li>
                  <li>–í—Å–µ –æ–¥–Ω–æ–≥—Ä—É–ø–ø–Ω–∏–∫–∏ –∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ —Å–º–æ–≥—É—Ç —É–≤–∏–¥–µ—Ç—å –≤–∞—à—É —Ä–∞–±–æ—Ç—É</li>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </main>
    </div>
  );
}

export default UploadPage; 